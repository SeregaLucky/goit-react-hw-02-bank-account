{"version":3,"sources":["components/Dashboard/TransactionHistory/TransactionHistory.module.css","components/Dashboard/TransactionHistory/TbodyList/TbodyList.module.css","components/Dashboard/Controls/Controls.module.css","components/Dashboard/Controls/Controls.js","components/Dashboard/Balance/Balance.js","components/Dashboard/TransactionHistory/TbodyList/TbodyList.js","components/Dashboard/TransactionHistory/TransactionHistory.js","components/Dashboard/Dashboard.js","servises/localStorage.js","components/App/App.js","index.js","components/Dashboard/Balance/Balance.module.css"],"names":["module","exports","Controls","state","inputValue","handleChangeValue","e","setState","target","value","clickButtonOnDeposit","onDeposit","props","Number","clickButtonOnWithdraw","onWithdraw","this","className","styles","controls","input","type","name","placeholder","onChange","min","button","onClick","Component","Balance","balance","income","expenses","textIncome","textExpenses","text","TbodyList","items","map","item","key","id","itemIncome","itemExpenses","amount","date","TransactionHistory","historyTable","theadHeader","toast","configure","OPTION","year","day","month","hour","minute","second","Dashboard","transactions","notifyIfZero","info","position","POSITION","BOTTOM_RIGHT","notifyLimitIsExceeded","warn","notifyNegativeNumbers","makeSetStateForTransactions","typeNeed","Date","obj","shortid","generate","toLocaleString","prevState","findIncomeExpenses","reduce","acc","transaction","deposit","withdraw","handleDeposit","handleWithdraw","objIncomeExpenses","localStorage","getItem","JSON","parse","err","console","log","getLocalStorage","prevProps","setItem","stringify","saveLocalStorage","dashboard","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.09cd8f27.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"historyTable\":\"TransactionHistory_historyTable__SA66Z\",\"theadHeader\":\"TransactionHistory_theadHeader__1ZZB0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TbodyList_item__1pVL3\",\"itemIncome\":\"TbodyList_itemIncome__2IBmy TbodyList_item__1pVL3\",\"itemExpenses\":\"TbodyList_itemExpenses__3zuGt TbodyList_item__1pVL3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__3Z0fn\",\"input\":\"Controls_input__3XLO0\",\"button\":\"Controls_button__R4OHW\"};","/* import - node_modules */\r\nimport React, { Component } from 'react';\r\nimport T from 'prop-types';\r\n/* import - CSS */\r\nimport styles from './Controls.module.css';\r\n\r\n/*\r\n * COMPONENT\r\n */\r\nclass Controls extends Component {\r\n  static propTypes = {\r\n    onDeposit: T.func.isRequired,\r\n    onWithdraw: T.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    inputValue: '',\r\n  };\r\n\r\n  handleChangeValue = e => this.setState({ inputValue: e.target.value });\r\n\r\n  clickButtonOnDeposit = () => {\r\n    const { onDeposit } = this.props;\r\n    const { inputValue } = this.state;\r\n\r\n    onDeposit(Number(inputValue));\r\n    this.setState({ inputValue: '' });\r\n  };\r\n\r\n  clickButtonOnWithdraw = () => {\r\n    const { onWithdraw } = this.props;\r\n    const { inputValue } = this.state;\r\n\r\n    onWithdraw(Number(inputValue));\r\n    this.setState({ inputValue: '' });\r\n  };\r\n\r\n  render() {\r\n    const { inputValue } = this.state;\r\n\r\n    return (\r\n      <section className={styles.controls}>\r\n        <input\r\n          className={styles.input}\r\n          type=\"number\"\r\n          name=\"amount\"\r\n          placeholder=\"Amount...\"\r\n          value={inputValue}\r\n          onChange={this.handleChangeValue}\r\n          min=\"0\"\r\n        />\r\n\r\n        <button\r\n          className={styles.button}\r\n          type=\"button\"\r\n          onClick={this.clickButtonOnDeposit}\r\n        >\r\n          Deposit\r\n        </button>\r\n        <button\r\n          className={styles.button}\r\n          type=\"button\"\r\n          onClick={this.clickButtonOnWithdraw}\r\n        >\r\n          Withdraw\r\n        </button>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Controls;\r\n","/* import - node_modules */\r\nimport React from 'react';\r\nimport T from 'prop-types';\r\n/* import - CSS */\r\nimport styles from './Balance.module.css';\r\n\r\n/*\r\n * COMPONENT\r\n */\r\nconst Balance = ({ balance, income, expenses }) => (\r\n  <section className={styles.balance}>\r\n    <span className={styles.textIncome}>{income}$</span>\r\n    <span className={styles.textExpenses}>{expenses}$</span>\r\n\r\n    <span className={styles.text}>Balance: {balance}$</span>\r\n  </section>\r\n);\r\n\r\nBalance.propTypes = {\r\n  balance: T.number.isRequired,\r\n  income: T.number.isRequired,\r\n  expenses: T.number.isRequired,\r\n};\r\n\r\nexport default Balance;\r\n","/* import - node_modules */\r\nimport React from 'react';\r\nimport T from 'prop-types';\r\n/* import - CSS */\r\nimport styles from './TbodyList.module.css';\r\n\r\n/*\r\n * COMPONENT\r\n */\r\nconst TbodyList = ({ items }) => (\r\n  <tbody>\r\n    {items.map(item => (\r\n      <tr\r\n        key={item.id}\r\n        className={\r\n          item.type === 'deposit' ? styles.itemIncome : styles.itemExpenses\r\n        }\r\n      >\r\n        <td>{item.type}</td>\r\n        <td>{item.amount}$</td>\r\n        <td>{item.date}</td>\r\n      </tr>\r\n    ))}\r\n  </tbody>\r\n);\r\n\r\nTbodyList.propTypes = {\r\n  items: T.arrayOf(\r\n    T.shape({\r\n      id: T.string.isRequired,\r\n      type: T.string.isRequired,\r\n      amount: T.number.isRequired,\r\n      date: T.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default TbodyList;\r\n","/* import - node_modules */\r\nimport React from 'react';\r\nimport T from 'prop-types';\r\n/* import - CSS */\r\nimport styles from './TransactionHistory.module.css';\r\n/* import - COMPONENT */\r\nimport TbodyList from './TbodyList/TbodyList';\r\n\r\n/*\r\n * COMPONENT\r\n */\r\nconst TransactionHistory = ({ items }) => (\r\n  <table className={styles.historyTable}>\r\n    <thead className={styles.theadHeader}>\r\n      <tr>\r\n        <th>Transaction</th>\r\n        <th>Amount</th>\r\n        <th>Date</th>\r\n      </tr>\r\n    </thead>\r\n\r\n    <TbodyList items={items} />\r\n  </table>\r\n);\r\n\r\nTransactionHistory.propTypes = {\r\n  items: T.arrayOf(T.shape).isRequired,\r\n};\r\n\r\nexport default TransactionHistory;\r\n","/* import - node_modules */\r\nimport React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\nimport { toast } from 'react-toastify';\r\n/* import - CSS */\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport styles from './Dashboard.module.css';\r\n/* import - COMPONENT */\r\nimport Controls from './Controls/Controls';\r\nimport Balance from './Balance/Balance';\r\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\r\n/* import - other */\r\nimport { saveLocalStorage, getLocalStorage } from '../../servises/localStorage';\r\n\r\ntoast.configure();\r\n/*\r\n * COMPONENT\r\n */\r\nconst OPTION = {\r\n  year: 'numeric',\r\n  day: 'numeric',\r\n  month: '2-digit',\r\n  hour: '2-digit',\r\n  minute: '2-digit',\r\n  second: '2-digit',\r\n};\r\n\r\nclass Dashboard extends Component {\r\n  state = {\r\n    transactions: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    const transactions = getLocalStorage('transactions');\r\n\r\n    if (!transactions) return;\r\n\r\n    this.setState({ transactions });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { transactions } = this.state;\r\n\r\n    if (prevState.transactions === transactions) return;\r\n\r\n    saveLocalStorage('transactions', transactions);\r\n  }\r\n\r\n  notifyIfZero = () => {\r\n    toast.info('Введите сумму для проведения операции!', {\r\n      position: toast.POSITION.BOTTOM_RIGHT,\r\n    });\r\n  };\r\n\r\n  notifyLimitIsExceeded = () => {\r\n    toast.warn('На счету недостаточно средств для проведения операции!', {\r\n      position: toast.POSITION.BOTTOM_RIGHT,\r\n    });\r\n  };\r\n\r\n  notifyNegativeNumbers = () => {\r\n    toast.warn('Отрицательные числа не принимают!', {\r\n      position: toast.POSITION.BOTTOM_RIGHT,\r\n    });\r\n  };\r\n\r\n  makeSetStateForTransactions = (amount, typeNeed) => {\r\n    const date = new Date();\r\n\r\n    const obj = {\r\n      id: shortid.generate(),\r\n      type: typeNeed,\r\n      amount,\r\n      date: date.toLocaleString('en-US', OPTION),\r\n    };\r\n\r\n    this.setState(prevState => ({\r\n      transactions: [...prevState.transactions, obj],\r\n    }));\r\n  };\r\n\r\n  findIncomeExpenses = transactions => {\r\n    return transactions.reduce(\r\n      (acc, transaction) => {\r\n        return {\r\n          ...acc,\r\n          [transaction.type]: acc[transaction.type] + transaction.amount,\r\n        };\r\n      },\r\n      { deposit: 0, withdraw: 0 },\r\n    );\r\n  };\r\n\r\n  handleDeposit = amount => {\r\n    if (!amount) {\r\n      this.notifyIfZero();\r\n      return;\r\n    }\r\n    if (amount < 0) {\r\n      this.notifyNegativeNumbers();\r\n      return;\r\n    }\r\n\r\n    this.makeSetStateForTransactions(amount, 'deposit');\r\n  };\r\n\r\n  handleWithdraw = amount => {\r\n    if (!amount) {\r\n      this.notifyIfZero();\r\n      return;\r\n    }\r\n    if (amount < 0) {\r\n      this.notifyNegativeNumbers();\r\n      return;\r\n    }\r\n\r\n    const { transactions } = this.state;\r\n\r\n    const objIncomeExpenses = this.findIncomeExpenses(transactions);\r\n\r\n    if (objIncomeExpenses.deposit < objIncomeExpenses.withdraw + amount) {\r\n      this.notifyLimitIsExceeded();\r\n      return;\r\n    }\r\n\r\n    this.makeSetStateForTransactions(amount, 'withdraw');\r\n  };\r\n\r\n  render() {\r\n    const { transactions } = this.state;\r\n\r\n    const objIncomeExpenses = this.findIncomeExpenses(transactions);\r\n\r\n    const { deposit, withdraw } = objIncomeExpenses;\r\n    const balance = deposit - withdraw;\r\n\r\n    return (\r\n      <div className={styles.dashboard}>\r\n        <Controls\r\n          onDeposit={this.handleDeposit}\r\n          onWithdraw={this.handleWithdraw}\r\n        />\r\n        <Balance balance={balance} income={deposit} expenses={withdraw} />\r\n        <TransactionHistory items={transactions} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","/* eslint-disable */\r\nexport const saveLocalStorage = (key, value) => {\r\n  try {\r\n    localStorage.setItem(`${key}`, JSON.stringify(value));\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const getLocalStorage = key => {\r\n  try {\r\n    const transactions = localStorage.getItem(`${key}`);\r\n\r\n    return transactions ? JSON.parse(transactions) : null;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n","/* import - node_modules */\r\nimport React from 'react';\r\n/* import - CSS */\r\nimport './App.css';\r\n/* import - COMPONENT */\r\nimport Dashboard from '../Dashboard/Dashboard';\r\n\r\n/*\r\n * COMPONENT\r\n */\r\nconst App = () => <Dashboard />;\r\n\r\nexport default App;\r\n","/* import - node_modules */\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n/* import - CSS */\r\nimport './index.css';\r\n/* import - COMPONENT */\r\nimport App from './components/App/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__1eju8\",\"text\":\"Balance_text__31Zw3\",\"textIncome\":\"Balance_textIncome__18fpc Balance_text__31Zw3\",\"textExpenses\":\"Balance_textExpenses__2ZQod Balance_text__31Zw3\"};"],"sourceRoot":""}